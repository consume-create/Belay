html {
  width: 100%;
  height: 100%;
  font-size: 16px;
  box-sizing: border-box;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
}

body {
  width: 100%;
  height: 100%;

#__nuxt, #__layout, #wrapper, #inner {
    width: 100%;
  }
}


.module {
  color: $dark-blue;

  &.blue {
    color: $white;
    background: $dark-blue;
  }
}


.placeholder {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  min-height: 50vh;
  border: 1px solid black;
  text-transform: uppercase;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 0.1em;
}

a {
  color: $black;
  outline: 0;
  text-decoration: none;
}

.lazyload,
.lazyloading {
  opacity: 0;
}

.lazyloaded {
  transition: opacity $speed-demon linear;
  opacity: 1;
}

// no trans
.no-trans {
  transition: none !important;
}

.centered {
  margin: auto;
  text-align: center;
}

.upper {
  text-transform: uppercase;
}

.ellipses {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/**********************************************
Loading Indicator
**********************************************/
.loading:after {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  height: 24px;
  width: 24px;
  margin: -12px 0 0 -12px;
  animation: rotation 666ms infinite linear;
  border-left: 3px solid rgba(255, 255, 255, 0.45);
  border-right: 3px solid rgba(255, 255, 255, 0.45);
  border-bottom: 3px solid rgba(255, 255, 255, 0.45);
  border-top: 3px solid rgba(255, 255, 255, 1);
  border-radius: 50%;
  z-index: 10;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}


/**********************************************
Arrow Buttons
**********************************************/
.arrow-button-trapezoid {
  position: relative;
  clip-path: polygon(0 10%, 100% 0, 100% 100%, 0 90%);
  $size: 30px;
  width: $size;
  height: $size;
  background: $white;
  border: none;
  outline: none;

  &:after {
    content: "";
    position: absolute;
    width: 100%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    height: 18px;
    width: 18px;
    @include icon("right-arrow-minimal", $light-blue, true);
    transition: transform $speed-demon ease;
  }

  &.left {
    transform: rotate(180deg);
  }

  &:active {
    transform: scale(1) !important;
    &.left {
      transform: scale(1) rotate(180deg) !important;
    }
  }
}


.arrow {
  border: solid $white;
  border-width: 0 3px 3px 0;
  background: none;
  // display: inline-block;
  padding: 12px;
  transform: rotate(-45deg);
  -webkit-transform: rotate(-45deg);
    &.left {
      transform: rotate(135deg);
      -webkit-transform: rotate(135deg);
    }
}

.arrow-trap {
  position: relative;
  clip-path: polygon(0 10%, 100% 0, 100% 100%, 0 90%);
  // clip-path: polygon(100% 0, 100% 100%, 23% 85%, 23% 25%);
  $size: 30px;
  width: $size;
  height: $size;
  background: $white;
  border: none;
  outline: none;

    &:after{
      content: "";
      position: absolute;
      border: solid $dark-blue;
      border-width: 0 2px 2px 0;
      background: none;
      padding: 5px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(-45deg);
      // -webkit-transform: rotate(-45deg);
    }

    &.left {
      transform: rotate(180deg);
      -webkit-transform: rotate(180deg);
    }

    &:active {
      transform: scale(1) !important;
      &.left {
        transform: scale(1) rotate(180deg) !important;
      }
    }
}

@keyframes grow {
  0% {
    transform: scale(1);
    opacity: 0.6;
  }
  40% {
    transform: scale(1);
    opacity: 0.6;
  }
  100% {
    transform: scale(2.75);
    opacity: 0;
  }
}

@include respond-to($tablet) {
  .arrow-button {
    $size: 40px;
    width: $size;
    height: $size;

    &.animated {
      &:before {
        content: '';
        @include circle($size);
      }
    }
  }
}

@include can-hover {
  .arrow-button {
    cursor: pointer;

    &:hover {
      transform: scale(1.08);

      &.left {
        transform: scale(1.08) rotate(180deg);
      }
    }
  }
}


@include respond-to($tablet) {
  .link-btn {
    font-size: 12px;

    &.large {
      font-size: 18px;
      padding: 0.6em 3em;
      border-radius: 12px;
    }

    &:after {
      width: 20px;
      height: 20px;
    }
  }
}

/**********************************************
Fade Transitions
**********************************************/
.fade-enter-active,
.fade-leave-active {
  & > * {
    transition-duration: $speed-demon * 0.8;
    transition-property: opacity, transform;
    transition-timing-function: ease-out;
  }
}

.fade-enter,
.fade-leave-to {
  & > * {
    transition-timing-function: ease-in;
    opacity: 0;
    transform: translateY(40px);
  }
}
$delay: $speed-demon / 6;

.fade-enter-active {
  & > * {
    &:nth-child(1) {
      transition-delay: $delay * 0;
    }
    &:nth-child(2) {
      transition-delay: $delay * 1;
    }
    &:nth-child(3) {
      transition-delay: $delay * 2;
    }
    &:nth-child(4) {
      transition-delay: $delay * 3;
    }
  }
}
.fade-leave-active {
  & > * {
    transition: opacity $speed-demon * 0.5 ease, transform $speed-demon ease;

    &:nth-child(1) {
      transition-delay: $delay * 2;
    }
    &:nth-child(2) {
      transition-delay: $delay * 1;
    }
    &:nth-child(3) {
      transition-delay: $delay * 0;
    }
    &:nth-child(4) {
      transition-delay: $delay * 0;
    }
  }
}

.simple-fade-enter-active,
.simple-fade-leave-active {
  transition: opacity $speed-metal ease;
}
.simple-fade-enter,
.simple-fade-leave-to {
  opacity: 0;
}

.swap-fade-leave-active {
  transition: opacity $speed-demon ease, transform $speed-demon ease, visibility 0ms linear ($speed-demon + $speed-metal + 5ms);
}

.swap-fade-leave-to {
  transform: translate(0%, 55%);
  opacity: 0;
}

.swap-fade-enter-active {
  transition: opacity $speed-demon ease $speed-metal;
  opacity: 0.99;

  & > * {
    transition-duration: $speed-demon * 0.8;
    transition-property: opacity, transform;
    transition-timing-function: ease-out;
    opacity: 0;
    transform: translateY(40px);

    &:nth-child(1) {
      transition-delay: $delay * 3;
    }
    &:nth-child(2) {
      transition-delay: $delay * 4;
    }
    &:nth-child(3) {
      transition-delay: $delay * 5;
    }
    &:nth-child(4) {
      transition-delay: $delay * 6;
    }
  }
}

.swap-fade-enter-to {
  transform: translate(-50%, 0%) scale(1);
  opacity: 1;

  & > * {
    opacity: 1;
    transform: translateY(0px);
  }
}

/**********************************************
Carousel Transitions
**********************************************/
.swiper-slide {
  opacity: 0.1;
  transform: scale(0.4);
  transition: $speed-demon $evil-ease;
  transition-property: transform, opacity;

  &.swiper-slide-prev {
    opacity: 0.3;
    transform: scale(0.85);
  }
  &.swiper-slide-next {
    opacity: 0.3;
    transform: scale(0.85);
  }

  &.swiper-slide-active {
    opacity: 1;
    transform: scale(1);
  }
}
